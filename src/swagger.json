{
    "openapi": "3.0.1",
    "info": {
      "title": "My API",
      "description": "API description",
      "version": "1.0.0"
    },
    "servers": [
      {
        "url": "https://api.inferallai.com"
      }
    ],
    "tags": [
      {
        "name": "basic-error-controller",
        "description": "Basic Error Controller"
      },
      {
        "name": "stable-diffusion-controller",
        "description": "Stable Diffusion Controller"
      },
      {
        "name": "user-contorller",
        "description": "User Contorller"
      }
    ],
    "paths": {
      "/imageai/dhbh1387/healthcheck": {
        "get": {
          "tags": [
            "stable-diffusion-controller"
          ],
          "summary": "healthCheck",
          "operationId": "healthCheckUsingGET",
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "*/*": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized",
              "content": {}
            },
            "403": {
              "description": "Forbidden",
              "content": {}
            },
            "404": {
              "description": "Not Found",
              "content": {}
            }
          }
        }
      },
      "/fetch/{id}": {
        "get": {
          "tags": [
            "stable-diffusion-controller"
          ],
          "summary": "Fetch queued result",
          "operationId": "fetchImageUsingGET",
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "description": "Authorization",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "id",
              "in": "path",
              "description": "id",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/ImgResponse"
                  }
                }
              }
            },
            "201": {
              "description": "Created",
              "content": {}
            },
            "400": {
              "description": "Bad Request",
              "content": {}
            },
            "401": {
              "description": "Unauthorized",
              "content": {}
            },
            "402": {
              "description": "Forbidden",
              "content": {}
            },
            "403": {
              "description": "Not Found",
              "content": {}
            },
            "404": {
              "description": "Not Found",
              "content": {}
            }
          }
        }
      },
      "/imageai/img2img": {
        "post": {
          "tags": [
            "stable-diffusion-controller"
          ],
          "summary": "Generate images from image using Stable Diffusion model",
          "operationId": "img2ImgUsingPOST",
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "description": "Authorization",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "description": "params",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Img2ImgParams"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/ImgResponse"
                  }
                }
              }
            },
            "201": {
              "description": "Created",
              "content": {}
            },
            "400": {
              "description": "Bad Request",
              "content": {}
            },
            "401": {
              "description": "Unauthorized",
              "content": {}
            },
            "402": {
              "description": "Forbidden",
              "content": {}
            },
            "403": {
              "description": "Not Found",
              "content": {}
            },
            "404": {
              "description": "Not Found",
              "content": {}
            }
          },
          "x-codegen-request-body-name": "params"
        }
      },
      "/imageai/inpainting": {
        "post": {
          "tags": [
            "stable-diffusion-controller"
          ],
          "summary": "Generate images from image using Stable Diffusion model",
          "operationId": "inPaintingUsingPOST",
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "description": "Authorization",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "description": "params",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InpaintingParams"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/ImgResponse"
                  }
                }
              }
            },
            "201": {
              "description": "Created",
              "content": {}
            },
            "400": {
              "description": "Bad Request",
              "content": {}
            },
            "401": {
              "description": "Unauthorized",
              "content": {}
            },
            "402": {
              "description": "Forbidden",
              "content": {}
            },
            "403": {
              "description": "Not Found",
              "content": {}
            },
            "404": {
              "description": "Not Found",
              "content": {}
            }
          },
          "x-codegen-request-body-name": "params"
        }
      },
      "/imageai/instruct-pix2pix": {
        "post": {
          "tags": [
            "stable-diffusion-controller"
          ],
          "summary": "Generate pix 2 pix image using Stable Diffusion model",
          "operationId": "instructPix2PixUsingPOST",
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "description": "Authorization",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "description": "params",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InstructPix2PixParams"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/ImgResponse"
                  }
                }
              }
            },
            "201": {
              "description": "Created",
              "content": {}
            },
            "400": {
              "description": "Bad Request",
              "content": {}
            },
            "401": {
              "description": "Unauthorized",
              "content": {}
            },
            "402": {
              "description": "Forbidden",
              "content": {}
            },
            "403": {
              "description": "Not Found",
              "content": {}
            },
            "404": {
              "description": "Not Found",
              "content": {}
            }
          },
          "x-codegen-request-body-name": "params"
        }
      },
      "/imageai/text2img": {
        "post": {
          "tags": [
            "stable-diffusion-controller"
          ],
          "summary": "Generate images from text prompts using Stable Diffusion model",
          "operationId": "text2ImgUsingPOST",
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "description": "Authorization",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "description": "params",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Text2ImgParams"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/ImgResponse"
                  }
                }
              }
            },
            "201": {
              "description": "Created",
              "content": {}
            },
            "400": {
              "description": "Bad Request",
              "content": {}
            },
            "401": {
              "description": "Unauthorized",
              "content": {}
            },
            "402": {
              "description": "Forbidden",
              "content": {}
            },
            "403": {
              "description": "Not Found",
              "content": {}
            },
            "404": {
              "description": "Not Found",
              "content": {}
            }
          },
          "x-codegen-request-body-name": "params"
        }
      },
      "/saveuser": {
        "post": {
          "tags": [
            "user-contorller"
          ],
          "summary": "Save user details and Create api key",
          "operationId": "saveUserUsingPOST",
          "parameters": [
            {
              "name": "code",
              "in": "query",
              "description": "code",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/CognitoUserDetails"
                  }
                }
              }
            },
            "201": {
              "description": "Created",
              "content": {}
            },
            "400": {
              "description": "Bad Request",
              "content": {}
            },
            "401": {
              "description": "Unauthorized",
              "content": {}
            },
            "402": {
              "description": "Forbidden",
              "content": {}
            },
            "403": {
              "description": "Not Found",
              "content": {}
            },
            "404": {
              "description": "Not Found",
              "content": {}
            }
          }
        }
      }
    },
    "components": {
      "schemas": {
        "CognitoUserDetails": {
          "title": "CognitoUserDetails",
          "type": "object",
          "properties": {
            "email": {
              "type": "string"
            },
            "email_verified": {
              "type": "boolean"
            },
            "username": {
              "type": "string"
            }
          }
        },
        "Img2ImgParams": {
          "title": "Img2ImgParams",
          "type": "object",
          "properties": {
            "guidance_scale": {
              "minimum": 0,
              "exclusiveMinimum": false,
              "type": "number",
              "description": "Guidance scale.",
              "format": "float"
            },
            "image_height": {
              "maximum": 696,
              "exclusiveMaximum": false,
              "type": "integer",
              "description": "Image height.",
              "format": "int32"
            },
            "image_url": {
              "type": "string",
              "description": "Image Url"
            },
            "image_width": {
              "maximum": 696,
              "exclusiveMaximum": false,
              "type": "integer",
              "description": "Image width.",
              "format": "int32"
            },
            "model": {
              "type": "string",
              "description": "Model name"
            },
            "negative_prompt": {
              "type": "string",
              "description": "Negative text prompt for the model.",
              "example": "a terrible storm"
            },
            "num_images": {
              "maximum": 4,
              "exclusiveMaximum": false,
              "minimum": 1,
              "exclusiveMinimum": false,
              "type": "integer",
              "description": "Number of images to generate.",
              "format": "int32"
            },
            "prompt": {
              "type": "string",
              "description": "Text prompt for the model.",
              "example": "a beautiful sunset"
            },
            "scheduler": {
              "pattern": "DDIMScheduler|EulerAncestralDiscreteScheduler|PNDMScheduler",
              "type": "string",
              "description": "Scheduler to use for the model."
            },
            "seed": {
              "minimum": 0,
              "exclusiveMinimum": false,
              "type": "integer",
              "description": "Seed for the model.",
              "format": "int32"
            },
            "steps": {
              "maximum": 50,
              "exclusiveMaximum": false,
              "minimum": 1,
              "exclusiveMinimum": false,
              "type": "integer",
              "description": "Number of steps to run the model.",
              "format": "int32"
            },
            "strength": {
              "maximum": 1,
              "exclusiveMaximum": false,
              "minimum": 0,
              "exclusiveMinimum": false,
              "type": "number",
              "description": "Strength",
              "format": "float"
            },
            "type": {
              "type": "string"
            }
          }
        },
        "ImgResponse": {
          "title": "ImgResponse",
          "type": "object",
          "properties": {
            "errors": {
              "type": "array",
              "description": "Error",
              "items": {
                "type": "string"
              }
            },
            "id": {
              "type": "string",
              "description": "Id"
            },
            "metadata": {
              "type": "object",
              "properties": {},
              "description": "Metadata"
            },
            "output": {
              "type": "array",
              "description": "List of images in base64 format",
              "items": {
                "type": "string"
              }
            },
            "status": {
              "type": "string",
              "description": "Request status"
            }
          }
        },
        "InpaintingParams": {
          "title": "InpaintingParams",
          "type": "object",
          "properties": {
            "guidance_scale": {
              "minimum": 0,
              "exclusiveMinimum": false,
              "type": "number",
              "description": "Guidance scale.",
              "format": "float"
            },
            "image_height": {
              "maximum": 696,
              "exclusiveMaximum": false,
              "type": "integer",
              "description": "Image height.",
              "format": "int32"
            },
            "image_url": {
              "type": "string",
              "description": "Image Url"
            },
            "image_width": {
              "maximum": 696,
              "exclusiveMaximum": false,
              "type": "integer",
              "description": "Image width.",
              "format": "int32"
            },
            "mask_url": {
              "type": "string",
              "description": "Mask Image Url"
            },
            "model": {
              "pattern": "runwayml/stable-diffusion-inpainting|stabilityai/stable-diffusion-2-inpainting",
              "type": "string",
              "description": "Model name"
            },
            "negative_prompt": {
              "type": "string",
              "description": "Negative text prompt for the model.",
              "example": "a terrible storm"
            },
            "num_images": {
              "maximum": 4,
              "exclusiveMaximum": false,
              "minimum": 1,
              "exclusiveMinimum": false,
              "type": "integer",
              "description": "Number of images to generate.",
              "format": "int32"
            },
            "prompt": {
              "type": "string",
              "description": "Text prompt for the model.",
              "example": "a beautiful sunset"
            },
            "scheduler": {
              "pattern": "DDIMScheduler|EulerAncestralDiscreteScheduler|PNDMScheduler",
              "type": "string",
              "description": "Scheduler to use for the model."
            },
            "seed": {
              "minimum": 0,
              "exclusiveMinimum": false,
              "type": "integer",
              "description": "Seed for the model.",
              "format": "int32"
            },
            "steps": {
              "maximum": 50,
              "exclusiveMaximum": false,
              "minimum": 1,
              "exclusiveMinimum": false,
              "type": "integer",
              "description": "Number of steps to run the model.",
              "format": "int32"
            },
            "type": {
              "type": "string"
            }
          }
        },
        "InstructPix2PixParams": {
          "title": "InstructPix2PixParams",
          "type": "object",
          "properties": {
            "guidance_scale": {
              "minimum": 0,
              "exclusiveMinimum": false,
              "type": "number",
              "description": "Guidance scale.",
              "format": "float"
            },
            "image_guidance_scale": {
              "minimum": 0,
              "exclusiveMinimum": false,
              "type": "number",
              "description": "Image guidance scale",
              "format": "float"
            },
            "image_height": {
              "maximum": 696,
              "exclusiveMaximum": false,
              "type": "integer",
              "description": "Image height.",
              "format": "int32"
            },
            "image_url": {
              "type": "string",
              "description": "Image Url"
            },
            "image_width": {
              "maximum": 696,
              "exclusiveMaximum": false,
              "type": "integer",
              "description": "Image width.",
              "format": "int32"
            },
            "model": {
              "type": "string",
              "description": "Model name"
            },
            "negative_prompt": {
              "type": "string",
              "description": "Negative text prompt for the model.",
              "example": "a terrible storm"
            },
            "num_images": {
              "maximum": 4,
              "exclusiveMaximum": false,
              "minimum": 1,
              "exclusiveMinimum": false,
              "type": "integer",
              "description": "Number of images to generate.",
              "format": "int32"
            },
            "prompt": {
              "type": "string",
              "description": "Text prompt for the model.",
              "example": "a beautiful sunset"
            },
            "scheduler": {
              "pattern": "DDIMScheduler|EulerAncestralDiscreteScheduler|PNDMScheduler",
              "type": "string",
              "description": "Scheduler to use for the model."
            },
            "seed": {
              "minimum": 0,
              "exclusiveMinimum": false,
              "type": "integer",
              "description": "Seed for the model.",
              "format": "int32"
            },
            "steps": {
              "maximum": 50,
              "exclusiveMaximum": false,
              "minimum": 1,
              "exclusiveMinimum": false,
              "type": "integer",
              "description": "Number of steps to run the model.",
              "format": "int32"
            },
            "type": {
              "type": "string"
            }
          }
        },
        "ModelAndView": {
          "title": "ModelAndView",
          "type": "object",
          "properties": {
            "empty": {
              "type": "boolean"
            },
            "model": {
              "type": "object",
              "properties": {}
            },
            "modelMap": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "properties": {}
              }
            },
            "reference": {
              "type": "boolean"
            },
            "status": {
              "type": "string",
              "enum": [
                "ACCEPTED",
                "ALREADY_REPORTED",
                "BAD_GATEWAY",
                "BAD_REQUEST",
                "BANDWIDTH_LIMIT_EXCEEDED",
                "CHECKPOINT",
                "CONFLICT",
                "CONTINUE",
                "CREATED",
                "DESTINATION_LOCKED",
                "EXPECTATION_FAILED",
                "FAILED_DEPENDENCY",
                "FORBIDDEN",
                "FOUND",
                "GATEWAY_TIMEOUT",
                "GONE",
                "HTTP_VERSION_NOT_SUPPORTED",
                "IM_USED",
                "INSUFFICIENT_SPACE_ON_RESOURCE",
                "INSUFFICIENT_STORAGE",
                "INTERNAL_SERVER_ERROR",
                "I_AM_A_TEAPOT",
                "LENGTH_REQUIRED",
                "LOCKED",
                "LOOP_DETECTED",
                "METHOD_FAILURE",
                "METHOD_NOT_ALLOWED",
                "MOVED_PERMANENTLY",
                "MOVED_TEMPORARILY",
                "MULTIPLE_CHOICES",
                "MULTI_STATUS",
                "NETWORK_AUTHENTICATION_REQUIRED",
                "NON_AUTHORITATIVE_INFORMATION",
                "NOT_ACCEPTABLE",
                "NOT_EXTENDED",
                "NOT_FOUND",
                "NOT_IMPLEMENTED",
                "NOT_MODIFIED",
                "NO_CONTENT",
                "OK",
                "PARTIAL_CONTENT",
                "PAYLOAD_TOO_LARGE",
                "PAYMENT_REQUIRED",
                "PERMANENT_REDIRECT",
                "PRECONDITION_FAILED",
                "PRECONDITION_REQUIRED",
                "PROCESSING",
                "PROXY_AUTHENTICATION_REQUIRED",
                "REQUESTED_RANGE_NOT_SATISFIABLE",
                "REQUEST_ENTITY_TOO_LARGE",
                "REQUEST_HEADER_FIELDS_TOO_LARGE",
                "REQUEST_TIMEOUT",
                "REQUEST_URI_TOO_LONG",
                "RESET_CONTENT",
                "SEE_OTHER",
                "SERVICE_UNAVAILABLE",
                "SWITCHING_PROTOCOLS",
                "TEMPORARY_REDIRECT",
                "TOO_EARLY",
                "TOO_MANY_REQUESTS",
                "UNAUTHORIZED",
                "UNAVAILABLE_FOR_LEGAL_REASONS",
                "UNPROCESSABLE_ENTITY",
                "UNSUPPORTED_MEDIA_TYPE",
                "UPGRADE_REQUIRED",
                "URI_TOO_LONG",
                "USE_PROXY",
                "VARIANT_ALSO_NEGOTIATES"
              ]
            },
            "view": {
              "$ref": "#/components/schemas/View"
            },
            "viewName": {
              "type": "string"
            }
          }
        },
        "Text2ImgParams": {
          "title": "Text2ImgParams",
          "type": "object",
          "properties": {
            "guidance_scale": {
              "minimum": 0,
              "exclusiveMinimum": false,
              "type": "number",
              "description": "Guidance scale.",
              "format": "float"
            },
            "image_height": {
              "maximum": 696,
              "exclusiveMaximum": false,
              "type": "integer",
              "description": "Image height.",
              "format": "int32"
            },
            "image_width": {
              "maximum": 696,
              "exclusiveMaximum": false,
              "type": "integer",
              "description": "Image width.",
              "format": "int32"
            },
            "model": {
              "type": "string",
              "description": "Model name"
            },
            "negative_prompt": {
              "type": "string",
              "description": "Negative text prompt for the model.",
              "example": "a terrible storm"
            },
            "num_images": {
              "maximum": 4,
              "exclusiveMaximum": false,
              "minimum": 1,
              "exclusiveMinimum": false,
              "type": "integer",
              "description": "Number of images to generate.",
              "format": "int32"
            },
            "prompt": {
              "type": "string",
              "description": "Text prompt for the model.",
              "example": "a beautiful sunset"
            },
            "scheduler": {
              "pattern": "DDIMScheduler|EulerAncestralDiscreteScheduler|PNDMScheduler",
              "type": "string",
              "description": "Scheduler to use for the model."
            },
            "seed": {
              "minimum": 0,
              "exclusiveMinimum": false,
              "type": "integer",
              "description": "Seed for the model.",
              "format": "int32"
            },
            "steps": {
              "maximum": 50,
              "exclusiveMaximum": false,
              "minimum": 1,
              "exclusiveMinimum": false,
              "type": "integer",
              "description": "Number of steps to run the model.",
              "format": "int32"
            },
            "type": {
              "type": "string"
            }
          }
        },
        "View": {
          "title": "View",
          "type": "object",
          "properties": {
            "contentType": {
              "type": "string"
            }
          }
        }
      }
    }
  }